
name: Build and Push Docker Image

on:
 push:
   branches: [ "master" ]
 pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
   
static_analysis:
   runs-on: ubuntu-latest
   needs: build
   steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
     - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      with:
          projectBaseDir: ./
          args: >
            -Dsonar.organization=ajayingale12345
            -Dsonar.projectKey=ajayingale12345_examportal-cicd
            -Dsonar.sources=src/main
            -Dsonar.java.binaries=target
      env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
 snyk-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Snyk
      run: npm install -g snyk

    - name: Authenticate Snyk
      run: snyk auth ${{ secrets.SNYK_TOKEN }}
    - name: Make mvnw executable
      run: chmod +x mvnw


    - name: Test and Monitor Dependencies
      run: snyk test --file=pom.xml
      continue-on-error: true

    - name: Generate Snyk Report
      run: snyk test --file=pom.xml --json > snyk-report.json || true

    - name: Install snyk-to-html
      run: npm install -g snyk-to-html

    - name: Convert Snyk Report to HTML
      run: snyk-to-html -i snyk-report.json -o snyk-report.html

    - name: Upload Snyk HTML Report
      uses: actions/upload-artifact@v2
      with:
        name: snyk-report
        path: snyk-report.html
  secret-scan:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Run Gitleaks to scan for secrets
      uses: zricethezav/gitleaks-action@v1.3.0
      with:
        args: "--path=./ExamBackend_CICD/src"

    - name: Upload Gitleaks report
      uses: actions/upload-artifact@v2
      with:
        name: gitleaks-report
        path: gitleaks-report.json
    # - name: Log in to GitHub Container Registry
    #   uses: docker/login-action@v2
    #   with:
    #       registry: ghcr.io
    #       username: ${{ github.repository_owner }}
    #       password: ${{ secrets.PAT_GITHUB_TOKEN }}

    # - name: Build Docker image
    #   run: docker build . --file Dockerfile --tag ghcr.io/${{ github.repository_owner }}/examportal:latest
    
    # - name: Install Trivy
    #   run: |
    #       sudo apt-get update
    #       sudo apt-get install wget -y
    #       wget https://github.com/aquasecurity/trivy/releases/download/v0.40.0/trivy_0.40.0_Linux-64bit.deb
    #       sudo dpkg -i trivy_0.40.0_Linux-64bit.deb

    # - name: Run Trivy scan on Docker image
    #   run: trivy image --no-progress --format json --output trivy-report.json ghcr.io/${{ github.repository_owner }}/examportal:latest
    # - name: Upload Trivy scan report as artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #       name: trivy-scan-report
    #       path: trivy-report.json
    # - name: List directory contents for debugging
    #   run: ls -alh
    # - name: Push Docker image to GitHub Container Registry
    #   run: docker push ghcr.io/${{ github.repository_owner }}/examportal:latest
